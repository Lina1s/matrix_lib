#include "../matrix_lib/matrix_lib.h"
#include <gtest/gtest.h>
#include <cmath>

static double sum(const matrix_lib::Matrix &mat) {
    double res = 0;
    for (size_t i = 0; i < mat.rows(); ++i) {
        for (size_t j = 0; j < mat.columns(); ++j) {
            res += std::abs(mat[i][j]);
        }
    }
    return res;
}

static double precision = 1e-7;

TEST(TestInv, basic) {
    matrix_lib::Matrix left;
    left = matrix_lib::Matrix{{24, 48},
                              {-6, -8}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{32, -13},
                              {47, -50}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{43, 34},
                              {42, -13}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-17, 38},
                              {-14, -41}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-38, -22},
                              {10,  33}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{3,  38},
                              {46, -45}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{40,  -11},
                              {-38, 44}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-1, -45},
                              {34, 16}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-22, -48},
                              {4,   31}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-39, -2},
                              {11,  14}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);
}

TEST(TestInv, big) {
    matrix_lib::Matrix left;

    left = matrix_lib::Matrix{{-30, 36,  -20, -9,  -6,  -46, -32, 15,  -33, 26,  -5,  -25, -9,  -43, 42,  -27, -8,  -6,  -13, -24},
                              {12,  14,  35,  23,  -31, -48, -4,  31,  -31, -5,  47,  -22, 42,  -36, -35, -1,  -10, -38, -24, -8},
                              {1,   15,  39,  16,  -42, -1,  17,  -13, -41, 49,  -23, -6,  -6,  18,  15,  24,  -34, 16,  -1,  -35},
                              {-23, 18,  -21, -18, -33, 38,  21,  42,  34,  12,  7,   12,  -29, 26,  44,  -13, -2,  -15, -34, 37},
                              {10,  44,  17,  -16, 48,  -24, 1,   3,   38,  -42, -45, -32, 48,  36,  24,  -20, -34, -3,  10,  -28},
                              {-23, -13, -13, -45, 9,   49,  -14, 39,  23,  -41, 25,  27,  -16, -3,  34,  -47, -12, 27,  -4,  -2},
                              {-33, 8,   45,  -20, 40,  48,  32,  8,   39,  21,  -24, 15,  -43, 42,  8,   -32, -37, 50,  -17, -42},
                              {45,  -48, 29,  11,  3,   -7,  41,  -27, -47, -25, 48,  -48, 21,  48,  20,  -50, -41, -21, -24, 12},
                              {18,  38,  -31, -12, -4,  -19, -22, 42,  1,   46,  -38, -3,  -6,  -33, 17,  -34, 43,  -38, -22, 28},
                              {-20, -13, -23, -37, -48, 16,  -13, 27,  23,  17,  -24, 30,  19,  -4,  30,  12,  -50, 34,  44,  7},
                              {-43, -3,  -35, 22,  -42, 29,  -32, -37, -5,  34,  41,  -2,  28,  18,  -7,  28,  4,   15,  -20, -20},
                              {-41, -8,  45,  -40, -34, 14,  2,   43,  27,  50,  42,  -15, 28,  -1,  43,  12,  -31, 2,   4,   28},
                              {-3,  40,  38,  -1,  30,  30,  3,   -41, 44,  -13, 5,   -23, -39, 44,  -9,  -16, -12, -48, -8,  13},
                              {27,  18,  -2,  40,  7,   0,   0,   -2,  -24, -23, 22,  49,  19,  -42, 44,  18,  14,  41,  18,  -7},
                              {-29, -20, 32,  31,  -26, 32,  -22, 19,  -38, -27, -9,  -43, 12,  -27, 7,   -15, 3,   38,  -44, 17},
                              {-18, -18, 25,  -32, -22, 43,  -41, -28, 49,  -22, -44, -13, -31, 6,   35,  -34, 10,  5,   38,  -27},
                              {35,  -38, 21,  -46, -46, -40, 10,  22,  -4,  -36, -19, 24,  -48, 8,   -8,  -42, -30, -37, 2,   -19},
                              {-23, 8,   -37, -5,  45,  -12, -4,  -50, 30,  37,  -6,  36,  -47, 31,  -13, 29,  33,  41,  39,  -8},
                              {9,   -50, -49, 41,  -30, -17, -3,  41,  -39, 50,  -39, -9,  5,   27,  -49, -15, 39,  46,  37,  19},
                              {41,  -41, -14, 35,  21,  -35, 3,   -11, -10, -17, -25, 50,  -5,  -22, 3,   22,  -7,  6,   -18, -9}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-17, -44, 34,  -39, 13,  -20, -9,  -38, -10, 46,  -49, -40, -4,  4,   -14, -43, 49,  -10, 39,  -10},
                              {4,   -5,  -15, 24,  -35, 8,   17,  -24, -40, -14, 8,   -6,  40,  28,  40,  42,  31,  -34, 1,   22},
                              {39,  -44, -15, -38, -25, -12, 28,  43,  -37, -8,  50,  -46, 11,  45,  10,  1,   47,  -48, -26, -7},
                              {-39, 5,   49,  -19, -2,  -24, -15, -37, -50, 19,  -46, 17,  40,  -1,  -47, 2,   -43, -36, 4,   -29},
                              {4,   -20, -11, 6,   44,  -13, 19,  -6,  5,   30,  -18, -36, -9,  4,   3,   -39, -14, 9,   27,  -14},
                              {43,  22,  -5,  42,  -26, -13, 2,   -6,  -16, -23, -30, -44, -24, 17,  7,   47,  10,  -2,  35,  13},
                              {-35, 44,  -25, 5,   36,  40,  8,   -36, 1,   -35, 29,  -4,  -50, 27,  -11, -4,  -40, -37, 13,  24},
                              {-4,  -17, -29, 26,  40,  11,  -41, 44,  -13, 48,  48,  30,  20,  -3,  -38, 32,  -2,  -24, 1,   6},
                              {39,  -9,  38,  -1,  29,  36,  46,  33,  -42, 45,  -49, -6,  -36, -29, -42, 28,  25,  -6,  27,  -43},
                              {12,  46,  15,  -33, 24,  -29, -11, -37, -7,  25,  20,  6,   28,  15,  2,   -38, -25, 7,   27,  -4},
                              {46,  -36, 47,  -41, -47, -15, -33, 30,  49,  -27, 34,  28,  41,  11,  13,  33,  18,  15,  -22, 29},
                              {-38, 18,  7,   14,  4,   -30, 46,  -22, -8,  -45, -42, -6,  35,  17,  1,   45,  -22, 18,  -12, -29},
                              {23,  -38, -10, -28, -47, 25,  -17, 25,  -16, -10, 6,   -15, -7,  -13, 11,  -10, 12,  -38, -6,  -44},
                              {35,  -44, 42,  50,  26,  34,  -28, -11, 22,  -1,  45,  21,  36,  14,  -42, -37, 49,  -16, 6,   24},
                              {-30, 22,  7,   -2,  -10, 46,  33,  -45, 38,  36,  28,  -25, 30,  41,  50,  18,  -4,  16,  36,  1},
                              {20,  -32, 22,  9,   50,  9,   40,  -2,  -1,  33,  4,   -41, 6,   49,  -35, -39, 46,  36,  -45, -49},
                              {20,  -7,  -19, -42, 50,  -18, -38, -48, -31, 5,   6,   -19, -10, 28,  -25, -42, 18,  15,  23,  -18},
                              {-38, 17,  -43, 42,  -13, -45, -33, 4,   14,  -45, -47, 21,  -33, -44, 16,  -5,  -36, 27,  -16, -50},
                              {-31, -43, -9,  -12, -46, 48,  21,  -37, -5,  -31, -33, -25, -5,  -38, -41, -48, 38,  -32, 14,  -49},
                              {-25, 10,  2,   -39, -14, 45,  -25, 11,  18,  -48, 30,  3,   24,  47,  36,  23,  -2,  49,  -7,  39}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{31,  -29, -37, 9,   12,  16,  20,  -2,  19,  -36, -2,  -46, -13, 19,  -29, -41, -37, 35,  7,   -27},
                              {9,   -50, 3,   1,   37,  29,  -26, 43,  -39, -1,  -17, 45,  7,   -43, -4,  38,  5,   38,  45,  -15},
                              {29,  33,  43,  -20, -44, 33,  32,  -33, 22,  50,  -33, -11, 21,  29,  -10, 38,  25,  -32, -46, -50},
                              {18,  -35, -50, -6,  -7,  -3,  43,  29,  15,  7,   35,  9,   18,  -44, -46, -41, -13, 48,  -9,  -19},
                              {17,  -17, 48,  46,  -11, 17,  15,  28,  28,  15,  39,  -25, 26,  9,   46,  5,   -32, -15, 13,  33},
                              {-8,  26,  -31, -32, 3,   0,   -33, 26,  50,  -11, -8,  48,  18,  -19, 6,   -6,  -31, -10, 34,  28},
                              {33,  48,  18,  21,  -37, 48,  -16, 44,  30,  -32, 26,  22,  20,  49,  7,   12,  30,  -40, 40,  48},
                              {-27, -24, 38,  -22, 49,  -41, -50, 36,  -3,  19,  -26, -24, 17,  -26, -7,  39,  42,  46,  -24, -1},
                              {-12, 32,  18,  -15, 1,   -35, 33,  -4,  18,  -48, 9,   -5,  31,  -44, 1,   48,  37,  7,   -6,  35},
                              {-7,  -24, -39, 30,  -39, 40,  7,   -4,  -34, -50, 36,  -5,  -12, 34,  5,   -35, 17,  16,  35,  2},
                              {-34, 35,  -22, -38, -17, 27,  -29, 1,   11,  7,   -7,  7,   -43, 43,  32,  -11, -17, 7,   10,  42},
                              {19,  -25, 3,   18,  -34, -10, 3,   -26, 29,  11,  -35, 21,  30,  -15, 35,  37,  -18, -7,  19,  -40},
                              {-47, 14,  -37, 2,   47,  -9,  9,   29,  -16, 0,   25,  -34, -43, -28, -33, -23, 13,  -41, -23, -18},
                              {-35, 5,   12,  25,  -38, -11, -26, 42,  4,   18,  -27, 40,  4,   -5,  -30, 34,  35,  14,  -26, 20},
                              {-24, -2,  -5,  -20, -38, 49,  -20, -38, -12, -9,  15,  -1,  -44, -15, -16, 20,  15,  1,   -30, 1},
                              {40,  46,  -32, 11,  -11, 28,  40,  -28, 45,  -15, 33,  -50, 25,  16,  48,  32,  49,  -20, 26,  1},
                              {35,  33,  19,  41,  22,  -5,  -25, 17,  45,  -21, 44,  -25, -27, -46, 14,  13,  -33, -10, -38, -4},
                              {-20, 35,  15,  -37, -19, 22,  12,  15,  -30, 39,  -36, 20,  50,  25,  -13, -10, -35, 18,  -32, 10},
                              {24,  21,  -34, -8,  32,  -17, -26, -24, -41, -42, 19,  -37, 50,  -23, -23, 44,  -10, 23,  -22, 1},
                              {34,  -44, 24,  20,  45,  -31, -5,  22,  32,  41,  38,  42,  -49, 0,   -10, 17,  38,  21,  35,  -22}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{48,  -49, 25,  49,  12,  39,  16,  -26, -41, -4,  -35, 40,  15,  -8,  -7,  -46, 41,  46,  20,  -13},
                              {12,  -50, 23,  -48, -47, -30, -30, -26, 40,  1,   24,  17,  -14, 44,  -8,  5,   8,   -14, 39,  -34},
                              {34,  16,  19,  -42, -47, -44, -17, -4,  5,   25,  -28, -21, 25,  21,  1,   8,   0,   32,  35,  31},
                              {-14, 9,   29,  0,   24,  28,  34,  -31, 29,  22,  28,  -30, 15,  38,  -47, -50, 48,  7,   13,  -2},
                              {-7,  -6,  -13, 8,   -38, -39, -19, 14,  44,  -12, -11, -50, -37, -43, -45, -35, -45, 34,  -19, 0},
                              {50,  -45, -30, -18, 46,  33,  -34, -27, 14,  43,  -50, 22,  -26, -5,  -42, 33,  -38, -37, -45, -35},
                              {7,   38,  9,   -17, -25, 30,  34,  -45, -4,  19,  32,  32,  -35, -47, 11,  -32, -32, 7,   1,   -27},
                              {-41, -4,  -4,  -12, 48,  41,  -18, 30,  -8,  -3,  -21, 42,  1,   32,  26,  5,   17,  6,   -22, 50},
                              {47,  -12, -38, 50,  -38, -7,  -29, -9,  39,  45,  35,  -15, 37,  20,  -13, 25,  -9,  -7,  -5,  28},
                              {-41, -28, 42,  -28, -14, -20, -39, 0,   -48, 5,   -1,  11,  -47, 12,  -4,  -22, -34, -18, 14,  -27},
                              {16,  47,  -38, 10,  12,  -6,  5,   -43, 4,   41,  32,  -35, -18, 29,  -19, 30,  25,  -17, -14, 10},
                              {37,  43,  -37, -4,  22,  -14, -37, 48,  -44, -8,  -27, 8,   -48, -40, -33, 13,  -34, 42,  -47, 7},
                              {31,  48,  29,  33,  -7,  -44, 50,  10,  30,  -41, -31, -5,  13,  10,  -27, -19, 11,  40,  -12, 7},
                              {33,  -24, -32, -18, 20,  4,   -16, 19,  -42, -35, -50, 47,  -9,  -16, -24, 49,  -46, -50, 39,  -23},
                              {-45, 20,  -41, 48,  -46, -27, 41,  14,  29,  37,  8,   14,  41,  -13, 23,  10,  27,  34,  -23, 41},
                              {-20, -25, -18, -43, 25,  29,  -41, -22, -44, -47, -8,  16,  -21, 12,  36,  -42, 16,  -15, -45, -36},
                              {-46, -3,  -40, -45, -18, -6,  32,  18,  24,  -1,  -16, 46,  32,  8,   -20, 9,   -33, -25, 23,  -2},
                              {12,  -46, -3,  -46, 40,  -6,  -4,  -26, -12, 48,  39,  29,  37,  -6,  -23, -11, 16,  38,  39,  -13},
                              {1,   -29, 23,  13,  -32, 49,  42,  8,   -19, 4,   -30, -46, -17, 31,  -8,  -24, -5,  20,  -23, 19},
                              {-7,  -35, -9,  4,   25,  12,  40,  -7,  -30, 26,  37,  -9,  37,  -20, -29, -48, 27,  -46, -29, 3}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-13, -40, 24,  -38, -14, -3,  -18, -7,  12,  -31, 7,   -25, 2,   30,  12,  39,  -23, -25, -41, -19},
                              {-1,  -20, -29, 34,  -50, 31,  17,  -30, -16, -7,  -20, 47,  -36, 15,  50,  48,  -38, 37,  19,  21},
                              {44,  -40, -18, 4,   -6,  -45, 38,  -23, 22,  -50, 42,  -10, -48, 35,  21,  45,  -5,  39,  -5,  -13},
                              {35,  47,  49,  -22, 44,  -25, -40, -34, -36, 6,   5,   -30, -11, 38,  -32, 23,  23,  -35, 12,  10},
                              {11,  -9,  -13, -41, 33,  -18, -7,  -43, 17,  -29, 41,  -24, 23,  -28, -21, 2,   -21, -30, -21, -33},
                              {16,  6,   -16, -24, 5,   30,  -5,  -39, 13,  -24, 29,  11,  -14, -7,  -35, -35, 4,   30,  -20, -16},
                              {9,   12,  19,  34,  -12, -42, 43,  14,  43,  34,  -22, -15, 12,  47,  28,  -6,  -43, 9,   44,  12},
                              {23,  5,   20,  -18, -10, -43, 7,   23,  33,  27,  -39, 12,  2,   -31, -25, 48,  -48, -5,  2,   1},
                              {-13, -5,  -1,  9,   1,   -47, -8,  49,  25,  23,  -23, 49,  6,   17,  29,  -4,  25,  -45, 35,  -25},
                              {0,   19,  -14, 42,  19,  -44, -15, -12, -49, 13,  -19, 6,   22,  -16, 19,  36,  -26, 14,  35,  15},
                              {-40, 42,  8,   -17, 26,  -41, -1,  -28, -22, 30,  -16, 22,  -4,  -42, -5,  24,  -35, -31, 50,  10},
                              {13,  -3,  35,  -2,  35,  36,  -15, 32,  -9,  -14, 48,  2,   -44, 22,  23,  27,  -47, 17,  32,  26},
                              {7,   6,   -24, -27, -11, -5,  25,  -24, 8,   -23, 41,  -46, 28,  -48, 26,  -10, 25,  16,  33,  3},
                              {46,  -18, 46,  8,   42,  -44, 39,  -6,  -33, -25, -6,  32,  15,  -46, 48,  -10, 40,  19,  11,  -16},
                              {-37, 7,   29,  23,  19,  -29, -30, 24,  -9,  -33, 48,  16,  5,   -4,  -45, 12,  -40, -46, -39, 27},
                              {8,   -22, 14,  -15, 6,   -10, 11,  23,  -48, -15, 0,   -34, 2,   -14, -33, -1,  6,   -7,  -30, -12},
                              {36,  3,   -28, 43,  24,  8,   41,  -28, -49, -34, -49, 49,  -29, -46, -20, 10,  -28, 46,  42,  17},
                              {20,  -41, -3,  -23, -43, -11, 5,   8,   4,   -40, -37, -43, -19, 12,  -42, 42,  -33, 32,  -48, -33},
                              {-21, -44, -46, 30,  -2,  31,  7,   34,  -10, -10, 19,  -46, 45,  15,  12,  -1,  9,   -10, -3,  -36},
                              {-40, 10,  38,  -48, 24,  -36, -46, 14,  1,   29,  -4,  -6,  15,  37,  34,  38,  45,  -17, 24,  -30}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-30, -24, -48, -25, -15, 13,  -36, 15,  -36, -4,  12,  -29, 48,  40,  14,  23,  8,   -13, 20,  12},
                              {-18, 26,  -2,  -38, -18, -40, 13,  -41, -4,  0,   19,  -50, 31,  12,  45,  8,   43,  -5,  26,  45},
                              {6,   13,  16,  -25, -2,  -10, 38,  1,   10,  26,  -16, -15, -17, 49,  -13, -47, -12, 33,  38,  -50},
                              {26,  -12, -2,  17,  18,  50,  24,  -11, -35, 47,  10,  47,  36,  -21, 50,  44,  27,  -5,  31,  25},
                              {50,  10,  -9,  37,  -38, 13,  31,  -22, 28,  -12, -20, 49,  -4,  -25, 12,  -48, 45,  -47, -11, 32},
                              {28,  -31, 5,   -40, 45,  -46, 27,  38,  -45, -20, -3,  6,   42,  11,  0,   -42, -34, 22,  -23, -28},
                              {33,  44,  -50, 24,  -2,  47,  -29, 32,  -17, -28, -2,  2,   49,  -2,  -42, -41, -31, 49,  -49, -26},
                              {-22, -46, 36,  -50, 42,  -42, -26, 6,   32,  -31, 27,  1,   3,   -12, -12, -24, 42,  -1,  -10, 1},
                              {-14, -47, 32,  -48, -38, -6,  -34, -5,  46,  -4,  36,  -36, 35,  -18, 36,  36,  -29, 47,  -38, -20},
                              {21,  -42, 3,   18,  45,  -36, -38, -17, -45, 50,  -43, 14,  -4,  8,   -50, -29, -6,  28,  -21, 20},
                              {-47, 6,   -18, 15,  -16, 17,  -2,  20,  49,  40,  33,  50,  -7,  -33, -17, -6,  41,  48,  -26, 28},
                              {7,   -10, -18, -19, 9,   26,  -24, -45, -34, 45,  23,  43,  15,  32,  -9,  -18, 6,   9,   40,  1},
                              {-50, 36,  -48, -15, -39, 5,   34,  17,  12,  24,  47,  26,  26,  42,  4,   -48, 47,  17,  -8,  -6},
                              {4,   20,  41,  -49, 19,  50,  -2,  23,  7,   -4,  28,  9,   27,  12,  -27, 28,  3,   -15, -36, -13},
                              {-23, 38,  12,  -17, 5,   -26, -31, 14,  38,  37,  49,  25,  -19, -16, 4,   -42, 39,  31,  1,   31},
                              {-15, -33, 8,   8,   -1,  48,  43,  -22, -27, 22,  -30, -7,  20,  45,  -19, 0,   11,  2,   -14, 17},
                              {33,  45,  38,  30,  18,  -21, -45, -15, 10,  21,  35,  23,  41,  50,  -39, -38, 49,  -13, 49,  44},
                              {2,   -47, 13,  -2,  -45, 12,  -21, 34,  -26, -1,  -47, -50, -35, -45, -46, 50,  -6,  -50, 11,  -33},
                              {27,  -7,  -38, -43, 27,  -33, 49,  19,  -2,  -38, 49,  14,  12,  24,  -36, 4,   41,  30,  19,  11},
                              {43,  -19, 45,  33,  2,   -41, 11,  -31, 35,  38,  -38, 38,  24,  6,   13,  33,  -25, -16, 0,   -45}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{6,   44,  -42, -30, -10, 44,  46,  11,  31,  46,  50,  -5,  -35, 44,  17,  -4,  -2,  -31, 34,  -45},
                              {32,  -13, -1,  -35, -46, -13, -26, -34, 32,  -6,  10,  -50, 15,  -50, 12,  -29, -17, 28,  -21, -39},
                              {-22, 8,   -1,  -23, 25,  14,  14,  15,  -42, -1,  24,  28,  34,  48,  -12, 44,  -17, -23, 46,  -34},
                              {32,  6,   -6,  0,   50,  -25, 43,  19,  48,  -50, -16, -31, -6,  -9,  -39, -44, -27, -19, -28, 17},
                              {24,  -37, 7,   22,  33,  -4,  -5,  -28, -17, 32,  45,  -30, 28,  19,  -9,  -28, -33, -24, -15, 18},
                              {-28, 12,  43,  7,   36,  45,  1,   22,  30,  -5,  -47, 48,  -26, -6,  4,   34,  -16, 7,   -16, 48},
                              {40,  26,  5,   38,  -30, -21, -20, 14,  -23, -13, -2,  -50, -47, 22,  -15, -18, -38, -1,  -29, 7},
                              {-3,  -21, -36, 44,  22,  -15, 8,   16,  -29, -20, -19, -27, -33, 16,  -48, 20,  13,  -17, -50, 50},
                              {2,   48,  21,  -31, 20,  27,  1,   -38, -3,  -12, 46,  -36, -14, -14, 3,   14,  -19, 37,  45,  -38},
                              {-33, 22,  -21, 39,  25,  42,  -5,  45,  -12, -40, -47, 45,  7,   6,   38,  -1,  -40, 50,  36,  -25},
                              {4,   34,  29,  26,  40,  -25, 50,  11,  -3,  -23, -36, 50,  -4,  44,  42,  48,  29,  9,   6,   15},
                              {-30, -9,  29,  -46, -43, 30,  -23, -32, -41, -41, -36, -24, -23, 27,  -11, -38, 9,   -24, -32, 22},
                              {-1,  -32, 5,   -5,  17,  5,   -49, 31,  -50, 11,  -38, 1,   -34, -37, 46,  11,  -45, -17, 29,  -50},
                              {45,  -39, 40,  29,  -34, -42, -18, -45, -30, 43,  -43, -4,  4,   26,  -22, -42, 8,   -41, -31, 25},
                              {-33, 12,  32,  2,   -48, 23,  43,  39,  -41, -40, -5,  -25, -11, 30,  -46, 31,  14,  11,  41,  -50},
                              {-29, 21,  16,  15,  -43, 49,  24,  -38, 13,  50,  -6,  7,   24,  -23, -31, -10, 8,   -28, 28,  -50},
                              {35,  5,   -8,  28,  48,  -30, 37,  50,  26,  46,  -15, -33, -40, 15,  -22, -16, -10, -43, 45,  41},
                              {-42, 33,  -19, 42,  31,  -50, 50,  45,  23,  25,  27,  -46, 25,  -16, -18, -25, 47,  -36, 42,  43},
                              {25,  -28, -24, -33, 50,  -25, -41, -44, -44, -24, 5,   -6,  -10, -35, -36, -37, -9,  -8,  48,  43},
                              {21,  -35, -29, -37, 44,  43,  -45, 45,  30,  -32, -32, -5,  29,  -30, -5,  24,  6,   -41, 41,  9}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-2,  -30, 14,  -42, 43,  44,  -47, -21, -6,  38,  -46, -17, -50, 41,  19,  -28, 43,  -8,  9,   -47},
                              {19,  20,  -1,  27,  14,  40,  27,  -1,  30,  -45, -6,  33,  -20, 14,  -22, -50, -48, 2,   -27, -1},
                              {-45, 20,  37,  -28, 15,  14,  17,  38,  0,   30,  37,  -9,  27,  -5,  10,  24,  17,  -24, -19, 7},
                              {14,  -24, 34,  -29, -25, -8,  -12, 27,  -44, -26, -34, 16,  37,  -45, 30,  48,  0,   33,  -25, 17},
                              {2,   21,  -15, 0,   -47, 10,  45,  -38, 4,   49,  -45, 20,  42,  25,  -49, -43, -34, -3,  46,  16},
                              {-4,  -6,  -28, 10,  16,  12,  -9,  24,  19,  -34, -21, 11,  -13, -38, -5,  43,  27,  36,  -28, -45},
                              {13,  -25, -46, 17,  -14, -30, -24, 21,  -19, -11, -21, -19, -11, 35,  -11, 5,   35,  6,   27,  -40},
                              {-8,  -40, -28, -6,  27,  -44, -36, 18,  -43, -14, -44, 25,  49,  16,  -36, 38,  41,  5,   37,  5},
                              {12,  -22, -10, -42, 19,  -33, -9,  5,   -6,  -3,  43,  8,   -46, -25, -37, -3,  34,  -28, 10,  8},
                              {6,   28,  -1,  -14, 17,  -49, -17, -18, 3,   -30, -5,  24,  -43, -39, -24, -16, 12,  30,  14,  33},
                              {10,  -38, 13,  14,  15,  -4,  -22, -22, 25,  -30, -20, -5,  13,  18,  5,   -28, 7,   9,   -8,  41},
                              {48,  43,  -28, 27,  -13, 16,  -5,  -2,  39,  -44, -2,  -7,  -28, -46, -15, 42,  -19, -7,  -46, -8},
                              {1,   33,  -37, 6,   37,  2,   21,  18,  18,  46,  46,  -43, 39,  0,   38,  -41, -45, 6,   -43, 8},
                              {10,  17,  -2,  35,  28,  -2,  -27, 35,  -14, -4,  -15, 27,  22,  -23, 8,   -42, 25,  19,  46,  28},
                              {23,  -35, 8,   6,   -49, 31,  15,  8,   -12, -33, -30, 26,  -42, 2,   -16, -11, -24, -32, 30,  -34},
                              {43,  -19, -2,  -5,  -35, -44, -15, -28, 7,   -1,  43,  -17, 26,  -21, -47, 23,  -46, 48,  -35, -39},
                              {-15, -3,  6,   21,  2,   -23, 0,   -10, -21, -34, -43, 43,  40,  -16, 3,   6,   37,  50,  -43, 32},
                              {31,  45,  -26, 6,   -41, -19, -32, -31, -18, -22, -17, 23,  1,   -30, -37, -13, -15, -41, -31, 10},
                              {1,   -32, 4,   -49, 19,  -35, 45,  -9,  24,  -21, 41,  -29, 30,  11,  35,  -36, 21,  -41, -18, 23},
                              {-49, -50, -18, 43,  -26, 28,  48,  2,   -37, -45, 16,  24,  38,  -32, -12, 10,  0,   30,  -42, -46}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-48, 2,   5,   -13, -31, -34, 46,  -38, -44, 9,   -27, 33,  -31, 47,  -8,  20,  21,  -31, 31,  -23},
                              {-26, -33, -42, 18,  -7,  18,  48,  35,  48,  -29, -25, 25,  31,  46,  19,  -2,  48,  14,  14,  15},
                              {-18, -15, 26,  -40, -7,  -33, -29, 45,  -48, -19, -2,  -3,  -41, 17,  -37, 13,  -27, -40, 26,  39},
                              {13,  -24, -40, 48,  36,  -27, 6,   40,  3,   50,  38,  5,   4,   -4,  15,  4,   -1,  38,  19,  -10},
                              {-30, -39, -29, -46, -3,  -20, -7,  -8,  -6,  -39, 11,  -6,  -9,  10,  -44, -37, -23, 37,  -7,  -38},
                              {-47, -42, 13,  -6,  40,  30,  -39, -48, -10, 32,  -32, 27,  30,  49,  -46, -35, 44,  47,  -33, -34},
                              {32,  46,  41,  -23, 9,   -45, 24,  20,  13,  37,  -30, 28,  42,  42,  15,  -32, -43, 33,  29,  29},
                              {26,  -7,  -9,  -24, -1,  47,  -28, 20,  19,  -27, -13, 38,  40,  30,  42,  45,  -8,  -20, -17, -48},
                              {-6,  -6,  1,   3,   -48, 21,  -29, 28,  -26, -12, -49, -3,  -49, 33,  -2,  13,  32,  7,   -10, 35},
                              {-43, -20, -26, -49, -10, -20, -24, 27,  -15, 20,  38,  -11, 15,  2,   41,  -33, -3,  -32, 9,   38},
                              {28,  -25, -39, 30,  7,   -22, 21,  -36, 34,  2,   26,  -9,  -48, -46, -42, 43,  25,  12,  -36, 21},
                              {1,   35,  -3,  33,  11,  -28, -27, -26, -26, 5,   -13, -47, -39, 33,  -4,  50,  19,  45,  21,  44},
                              {2,   41,  22,  19,  9,   2,   -37, 8,   40,  9,   -16, -29, -17, 0,   48,  -49, 7,   29,  41,  -47},
                              {24,  -24, -19, -13, -8,  -38, 12,  14,  -38, 13,  -37, -10, -46, 28,  -9,  15,  28,  -3,  5,   49},
                              {11,  -40, -42, -7,  -32, 36,  -47, 2,   -2,  -1,  45,  -12, -16, 37,  -49, 24,  -44, 40,  7,   26},
                              {26,  -13, 3,   19,  -20, 40,  35,  -38, 25,  35,  13,  43,  12,  -47, 22,  -8,  -47, -23, -16, -19},
                              {2,   0,   -42, -40, -29, -26, -14, -6,  -42, 32,  -25, 47,  -11, 14,  10,  1,   41,  -24, 17,  -21},
                              {-1,  -39, 33,  39,  32,  15,  24,  -14, -21, 6,   -41, -36, 4,   -2,  -29, -7,  -4,  5,   22,  -45},
                              {14,  20,  29,  49,  -39, 19,  -37, 33,  29,  -47, -1,  -50, -29, -12, -21, -9,  37,  49,  -11, 14},
                              {48,  9,   -15, 43,  -29, -45, 28,  5,   3,   -49, -17, 8,   -41, 8,   34,  45,  -39, 42,  17,  -18}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{10,  26,  14,  32,  -48, 48,  -1,  40,  -36, -38, -33, -21, 23,  -39, 8,   -43, -41, -18, -39, 38},
                              {-4,  8,   36,  -19, 10,  -5,  -12, -1,  31,  -10, 3,   -29, -20, 45,  34,  -48, 8,   -42, -42, -41},
                              {48,  32,  -43, 9,   30,  34,  14,  -7,  26,  40,  -49, 49,  -24, -35, -4,  34,  -37, 27,  -48, -39},
                              {32,  7,   -15, -26, 4,   -39, -3,  -41, 38,  5,   -2,  7,   -41, -25, 3,   45,  -12, -23, 14,  -4},
                              {-37, 33,  31,  15,  -3,  -3,  -46, -25, -43, -23, -3,  -39, 20,  -15, 8,   -15, -1,  35,  -31, 10},
                              {37,  -22, 27,  -26, -44, -16, -24, 26,  5,   39,  -4,  45,  -16, -33, 47,  -27, 5,   0,   -34, 9},
                              {42,  -6,  11,  22,  -45, -13, 48,  -7,  49,  -33, -16, -35, 33,  -1,  -31, 50,  47,  14,  36,  28},
                              {-12, -33, 39,  18,  38,  -2,  9,   -32, -12, 7,   13,  -38, 38,  25,  -38, -6,  49,  37,  12,  30},
                              {42,  -19, -7,  21,  -1,  -20, 30,  -19, 20,  -6,  -27, 44,  2,   -20, 11,  -8,  38,  -8,  -1,  -4},
                              {-11, -9,  21,  -36, 35,  -41, 9,   16,  -43, -41, 21,  -34, 45,  28,  -41, -39, 41,  -22, 27,  -37},
                              {-7,  46,  17,  -19, 49,  40,  -32, -1,  1,   41,  -43, 29,  -41, 31,  -6,  -41, -16, -32, 28,  9},
                              {26,  -14, 18,  -42, 41,  -21, -33, -32, 48,  -16, 26,  23,  41,  -20, -36, -2,  -28, -16, 50,  -9},
                              {-26, -39, -45, 47,  -19, 43,  31,  44,  2,   -34, -45, -49, -12, -31, 13,  30,  -20, 19,  -21, -14},
                              {6,   -34, 35,  19,  -12, 7,   -7,  -44, 8,   -15, -4,  -46, -43, 14,  9,   5,   36,  -33, 4,   29},
                              {14,  33,  -15, 16,  27,  -33, -18, 15,  31,  -45, 30,  -21, -47, -14, -5,  -25, -39, -46, 33,  0},
                              {16,  -28, 17,  -43, -11, -15, -11, 34,  -34, 3,   -9,  -5,  -15, 34,  -32, -17, -15, -4,  -3,  -50},
                              {-7,  31,  -36, 19,  40,  8,   -46, 50,  -31, 9,   37,  25,  -10, 23,  48,  -39, 13,  40,  -22, 27},
                              {-12, 13,  18,  32,  -11, -45, -34, -10, -50, 5,   26,  -15, 12,  48,  50,  27,  -36, -45, 9,   -29},
                              {-49, -44, -49, -22, -25, -9,  -21, 15,  -26, -49, -7,  2,   21,  -38, -6,  -39, -20, -44, 15,  -20},
                              {32,  -44, 9,   -46, 14,  1,   -15, -11, -1,  40,  1,   -12, -15, 38,  -16, -37, -24, -46, -49, -19}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{15,  49,  5,   37,  -31, 20,  -45, -9,  43,  10,  -43, 49,  6,   -17, 25,  15,  11,  36,  12,  -9},
                              {-48, -18, -15, -32, 7,   -10, -4,  -11, 15,  12,  22,  -28, -47, 49,  -46, 28,  -33, -21, 41,  24},
                              {20,  -1,  -13, 32,  21,  27,  -42, 48,  -2,  49,  -42, 7,   -4,  -49, -10, 45,  -15, 13,  35,  -25},
                              {-49, -22, 39,  -25, 35,  41,  -15, 18,  -47, 7,   -37, 2,   12,  5,   7,   10,  7,   22,  -2,  -47},
                              {11,  -47, -23, 44,  -27, 37,  15,  -20, 24,  -43, -27, 13,  28,  -39, 49,  24,  -29, -21, 9,   -29},
                              {12,  20,  -25, 8,   10,  -18, -5,  20,  25,  -20, 30,  21,  -28, -10, -49, 6,   5,   -3,  -10, 42},
                              {-12, 17,  22,  8,   -4,  -15, 17,  -38, 1,   -36, -10, -2,  10,  -45, 2,   33,  9,   -10, 28,  -15},
                              {-7,  32,  25,  -15, 22,  -17, 14,  38,  -17, 0,   49,  -7,  -36, -48, -49, -42, 35,  -5,  -30, -49},
                              {5,   -34, -4,  9,   41,  -29, -44, 22,  28,  -31, -49, -38, 24,  -36, 12,  25,  -38, 7,   45,  31},
                              {-32, -43, -22, -40, -32, 6,   12,  -36, -21, -21, -34, -10, 46,  29,  -31, -18, -17, -25, 43,  -15},
                              {-18, -9,  -40, 38,  1,   -35, -42, 9,   45,  -14, -36, -34, -32, -29, 9,   12,  -27, -8,  -41, -3},
                              {29,  -2,  16,  20,  10,  15,  27,  -20, 17,  33,  25,  44,  -46, -24, 36,  35,  4,   9,   8,   7},
                              {29,  -46, -33, 41,  -34, 31,  -29, 16,  -26, -25, 16,  21,  -36, -47, -23, 21,  37,  17,  10,  48},
                              {-50, -5,  43,  33,  46,  -14, 19,  -1,  -17, -9,  -14, -14, -42, -13, -32, 1,   -37, 23,  -27, -18},
                              {-50, -3,  18,  35,  42,  -10, 28,  -1,  -36, -38, 47,  39,  16,  31,  38,  -34, -20, 5,   9,   -24},
                              {-42, -13, 14,  -9,  27,  40,  -25, 38,  3,   -43, 28,  15,  43,  22,  -27, 3,   0,   18,  -35, -27},
                              {-13, 2,   6,   -15, 31,  18,  -28, 6,   -26, -25, -50, -40, -32, -29, -38, 3,   -9,  41,  48,  25},
                              {-14, 43,  23,  -20, 10,  46,  21,  -26, -28, -25, 31,  49,  44,  17,  6,   -3,  -43, 0,   22,  -23},
                              {14,  -45, 8,   12,  42,  39,  18,  46,  24,  13,  -5,  19,  21,  -7,  44,  -24, 2,   -8,  38,  -31},
                              {45,  31,  45,  -28, 40,  36,  -37, 47,  28,  -23, -17, -17, -44, -21, 32,  31,  10,  40,  -34, -49}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{25,  -39, -43, 29,  -46, 32,  12,  -25, -35, 42,  -16, 37,  9,   -9,  9,   41,  -1,  -49, 34,  44},
                              {22,  37,  -19, -39, -22, 50,  -32, -11, 14,  2,   45,  24,  -11, 40,  -8,  48,  11,  -20, -29, -38},
                              {29,  41,  11,  -47, -2,  6,   -47, -46, 44,  18,  30,  -4,  -11, -37, -47, 18,  26,  -8,  19,  -47},
                              {48,  -29, 49,  27,  -42, -24, -50, 32,  -40, -34, -35, 40,  11,  50,  -40, -20, 24,  -12, 23,  26},
                              {20,  25,  -16, -33, -36, -34, 34,  -37, 4,   40,  42,  -40, -38, -28, 30,  -2,  -24, -36, -42, 6},
                              {46,  -34, 49,  -7,  31,  -31, -20, 38,  49,  44,  -17, 7,   -33, 42,  9,   -39, -35, -37, 48,  -7},
                              {1,   15,  10,  44,  21,  -37, -18, 27,  13,  -49, 20,  -6,  -16, -42, 14,  15,  -28, 6,   -31, 30},
                              {-6,  -44, -31, 26,  44,  43,  -7,  42,  -32, -5,  26,  -39, 19,  -33, 32,  -37, -19, 34,  -3,  -5},
                              {-47, -48, 37,  -18, 3,   42,  45,  -28, -49, 46,  -45, -12, -2,  38,  -3,  28,  6,   45,  -34, 9},
                              {-23, -16, -34, 8,   -30, 23,  18,  43,  50,  47,  -2,  42,  -49, 37,  -5,  15,  -42, -15, 42,  16},
                              {46,  -35, 8,   -46, -12, 4,   0,   -46, 41,  21,  28,  8,   18,  -8,  -20, 27,  0,   -9,  -34, 4},
                              {4,   4,   30,  -15, 43,  18,  35,  -30, -50, 23,  23,  8,   -19, -32, -33, -44, -27, -27, -5,  2},
                              {49,  42,  23,  -22, -15, -9,  33,  36,  9,   13,  -3,  41,  3,   20,  30,  4,   18,  -38, 46,  7},
                              {15,  27,  34,  -9,  -34, 1,   -31, -30, -19, -30, -35, -23, -45, 3,   -45, 6,   -9,  11,  -25, -23},
                              {-12, 33,  -26, -18, -34, -43, -28, -45, -46, 18,  -25, 2,   -46, 16,  -29, -2,  49,  -9,  -16, 22},
                              {29,  41,  6,   21,  -4,  -43, -32, -17, 36,  -43, -44, 0,   -47, -47, -33, 18,  5,   45,  -43, -22},
                              {36,  -18, 37,  -6,  5,   -22, -38, 3,   39,  13,  -1,  38,  2,   12,  -33, 27,  -7,  -49, -20, 9},
                              {24,  37,  -42, 49,  14,  27,  -30, 23,  30,  21,  -50, -27, 32,  -45, -20, -19, 40,  47,  -22, -9},
                              {28,  -15, -3,  22,  18,  -17, 38,  -18, -21, -30, 7,   -45, -24, -28, 38,  -10, 35,  -34, 0,   -5},
                              {-12, -1,  -22, -47, 45,  28,  27,  -36, 29,  29,  -42, 32,  -41, 42,  -19, -2,  -32, -13, 33,  -47}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-49, 19,  -27, -13, 22,  20,  -27, 42,  43,  -25, -50, 6,   27,  7,   -1,  2,   -1,  -31, -21, 11},
                              {15,  36,  34,  -17, 37,  -38, -37, 17,  -26, -2,  22,  -7,  29,  4,   1,   -38, -25, 31,  -31, -11},
                              {43,  -29, -19, -28, -10, -5,  -24, -1,  48,  -11, 44,  5,   -28, -31, 22,  -5,  29,  -19, 32,  -22},
                              {-23, 23,  29,  -21, -5,  18,  9,   -12, -18, 4,   37,  -30, -44, -13, -39, -48, -29, 7,   37,  43},
                              {30,  3,   -36, 42,  -37, 25,  19,  17,  27,  -2,  -1,  -38, -20, 10,  31,  -22, 22,  35,  -21, 41},
                              {-28, 3,   4,   42,  -32, 44,  45,  -46, -20, 7,   21,  41,  -8,  -37, -48, -4,  -24, -41, -44, 13},
                              {40,  -1,  29,  12,  40,  -11, 17,  14,  -9,  -17, 38,  3,   -32, -36, -16, 22,  15,  29,  -40, -26},
                              {-32, -17, 20,  -26, -38, 19,  -13, 47,  43,  -8,  -16, 26,  0,   -23, -37, -44, -25, -23, 24,  11},
                              {-48, -1,  37,  -32, -47, 5,   0,   -18, -8,  21,  -38, 37,  28,  28,  39,  41,  8,   36,  19,  -44},
                              {36,  17,  0,   -21, -44, 13,  47,  12,  13,  -1,  -50, -5,  -40, -29, -20, 48,  -18, -37, -27, 41},
                              {2,   -30, 48,  40,  19,  -35, -21, -36, -33, -7,  22,  30,  4,   -8,  -8,  -22, 19,  -23, 24,  49},
                              {29,  -33, 46,  -31, 10,  36,  -22, 14,  -36, -29, -30, -26, -44, -48, 21,  -48, -20, 34,  27,  -42},
                              {5,   -17, 23,  35,  -24, 25,  23,  37,  44,  -18, -3,  39,  -31, -49, -16, -32, 39,  50,  -9,  -23},
                              {-10, -50, 50,  -1,  -37, -24, 28,  45,  14,  -13, -1,  33,  8,   -14, -13, 13,  30,  35,  -50, 46},
                              {35,  -5,  33,  -31, 12,  -13, 6,   44,  14,  -11, 14,  6,   -46, -39, -8,  -2,  43,  -32, -26, -32},
                              {38,  35,  -13, -9,  5,   43,  14,  44,  -25, 7,   -42, 7,   6,   46,  40,  -15, -8,  3,   20,  41},
                              {21,  -5,  -15, -9,  -29, 36,  -6,  -16, 30,  50,  -3,  -23, -27, -45, 39,  -17, -38, 8,   -45, -41},
                              {-35, 32,  30,  16,  -50, 31,  24,  48,  46,  -26, 2,   -39, 28,  12,  13,  34,  46,  30,  37,  -10},
                              {4,   42,  23,  0,   46,  -44, 27,  24,  37,  16,  6,   34,  49,  -15, -9,  17,  -46, -19, 3,   -39},
                              {-4,  -18, 48,  3,   26,  -12, -14, 21,  -47, -17, 50,  -47, 0,   15,  43,  11,  29,  39,  18,  -21}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-2,  1,   32,  6,   30,  3,   -29, -24, 48,  -4,  39,  -20, -14, 17,  -1,  21,  -43, -2,  -6,  46},
                              {-17, 0,   43,  -49, 18,  45,  25,  -7,  43,  7,   24,  -29, 30,  -31, 45,  -17, -32, 10,  8,   -45},
                              {-20, 29,  16,  -39, 2,   -15, 41,  -46, 35,  3,   19,  -39, 11,  -5,  -39, 43,  -21, 40,  -16, 48},
                              {23,  -46, 43,  -13, 13,  36,  -18, -20, -50, -40, 23,  41,  29,  -40, 32,  42,  -2,  13,  11,  -45},
                              {41,  -33, 15,  22,  -38, -25, -42, -1,  39,  7,   -28, 12,  -4,  13,  37,  4,   -49, 26,  -4,  9},
                              {35,  -12, 36,  10,  -12, 39,  -34, -2,  49,  39,  5,   1,   4,   39,  4,   -28, -4,  5,   50,  33},
                              {31,  29,  -4,  50,  12,  -20, -24, 21,  11,  43,  -26, -16, 26,  24,  18,  12,  9,   -49, -30, -13},
                              {28,  -1,  2,   3,   -2,  7,   -34, 1,   36,  -16, 37,  22,  20,  -28, -13, 41,  -20, 47,  44,  47},
                              {47,  -11, -32, -19, -40, -13, -2,  3,   -41, -37, -9,  32,  -9,  19,  -14, 15,  3,   -28, 0,   -36},
                              {36,  22,  50,  -2,  2,   38,  14,  43,  5,   4,   -42, -3,  24,  33,  -34, 46,  13,  7,   -29, 33},
                              {-33, -50, 16,  -19, 19,  -37, -50, 13,  26,  -34, 31,  28,  33,  24,  25,  0,   21,  39,  -13, -36},
                              {13,  -6,  -28, 6,   -34, -8,  35,  32,  25,  3,   50,  -34, 8,   30,  10,  -29, -33, -8,  28,  -42},
                              {23,  14,  -12, -9,  -8,  -4,  2,   -45, -24, 34,  44,  1,   -35, -33, -49, -20, -15, -33, -45, 17},
                              {3,   43,  0,   22,  12,  -36, -12, 34,  -6,  -15, -44, 11,  9,   -26, 26,  9,   25,  5,   -15, 39},
                              {-10, 21,  5,   18,  -3,  39,  9,   38,  -50, 33,  -22, 3,   -47, -50, -20, 45,  -13, -27, -20, -17},
                              {6,   -21, -31, 1,   20,  22,  12,  8,   -27, 11,  -24, -42, 9,   36,  -45, -4,  24,  -32, -20, 31},
                              {49,  41,  14,  13,  -10, -12, 23,  -46, -24, 34,  -6,  -42, -10, -41, -9,  -48, 44,  -22, 44,  -19},
                              {-4,  -20, -30, -19, 20,  24,  -26, 11,  45,  38,  47,  -48, 9,   7,   -6,  -11, -12, -10, -34, -12},
                              {35,  8,   -8,  -37, -28, 7,   -48, -28, 44,  47,  -40, 31,  -21, -50, -2,  26,  11,  31,  33,  40},
                              {18,  33,  -11, 24,  17,  -2,  50,  5,   31,  19,  33,  -40, -47, -44, 24,  31,  19,  -20, 39,  -7}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{45,  -9,  29,  44,  5,   -10, -43, 12,  41,  19,  28,  -17, 33,  0,   50,  4,   -35, 11,  7,   -2},
                              {33,  18,  -11, -31, 47,  12,  -49, -46, 19,  42,  33,  16,  14,  44,  41,  -28, -5,  -41, -26, 0},
                              {23,  20,  42,  -35, 1,   37,  22,  -28, -13, -25, 40,  2,   50,  -18, -40, 45,  -10, -3,  23,  -44},
                              {-37, -44, -6,  -3,  -4,  -33, 24,  12,  4,   13,  1,   -37, -29, 17,  -9,  -13, -48, 19,  -41, 11},
                              {-4,  18,  36,  -40, 29,  -18, 38,  35,  30,  36,  -5,  -4,  17,  -36, -22, -41, -37, -33, -45, -10},
                              {-45, 21,  1,   30,  -33, 24,  33,  -15, 0,   29,  -7,  43,  40,  21,  -6,  -31, 44,  12,  -43, -30},
                              {7,   -22, -14, -41, -40, 1,   -2,  15,  48,  43,  -2,  27,  44,  -32, -18, -44, 34,  15,  49,  -12},
                              {46,  -34, -23, -7,  0,   29,  -44, 4,   35,  -12, -46, -12, 8,   1,   -45, -22, 32,  -44, -35, -3},
                              {-12, -26, 43,  29,  18,  14,  -49, 47,  24,  37,  23,  35,  36,  -14, 19,  -43, 43,  37,  12,  -47},
                              {-21, -14, -30, -9,  -6,  9,   16,  22,  -8,  35,  -2,  -15, 37,  33,  -48, 0,   -22, -12, 7,   20},
                              {-35, -31, -6,  45,  24,  -2,  46,  -20, 28,  33,  46,  -24, -12, -41, -23, 7,   -6,  28,  -32, 23},
                              {48,  0,   33,  -29, -35, 48,  -9,  47,  -44, -50, -48, 10,  29,  -7,  -50, 18,  28,  -15, -6,  -13},
                              {-14, 8,   38,  -27, 29,  24,  -16, -31, -40, -18, -22, -7,  33,  -36, 24,  41,  18,  -38, -10, 40},
                              {21,  18,  -25, -9,  25,  21,  -21, 50,  -7,  -15, -11, -14, -24, -4,  18,  -21, 28,  -14, 18,  32},
                              {25,  27,  -14, 16,  46,  -9,  44,  -18, -11, 2,   4,   42,  -49, 48,  -7,  25,  7,   17,  12,  15},
                              {14,  4,   45,  -6,  -14, -26, -29, 4,   -40, 41,  -48, 31,  -23, 18,  -44, 10,  3,   -31, -9,  41},
                              {29,  39,  15,  -46, -9,  22,  -27, 13,  -27, -33, 19,  -18, 29,  -50, 50,  -45, -22, -17, 39,  -50},
                              {47,  22,  -41, 9,   7,   6,   -33, 30,  -1,  42,  22,  -20, 37,  -11, -10, 33,  -48, 16,  -22, 7},
                              {-38, 38,  27,  48,  -26, 44,  22,  -23, 41,  23,  -44, 0,   -33, 1,   -30, -9,  -37, 16,  41,  5},
                              {-35, -48, -50, -8,  17,  -46, 35,  -21, -19, 16,  28,  40,  35,  -30, -25, -12, 41,  -9,  -40, 26}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-22, -15, 45,  -17, -24, 34,  19,  -20, 29,  47,  -19, -29, -12, -33, -31, 43,  25,  -27, 4,   -4},
                              {-18, 37,  -49, 13,  -36, -31, -46, -21, -9,  26,  22,  43,  17,  23,  30,  -22, 9,   -1,  21,  38},
                              {9,   -46, -29, -7,  16,  27,  19,  11,  47,  36,  -49, -50, 2,   -21, 38,  -17, 37,  25,  6,   43},
                              {45,  -40, -45, 15,  19,  -43, 35,  -16, -5,  -24, -28, -35, 33,  -17, -41, 17,  18,  7,   -30, 20},
                              {-21, 2,   41,  -33, -44, -21, 10,  -48, -34, 24,  -36, 0,   28,  -29, -20, -34, 50,  18,  -40, 30},
                              {-50, -24, -9,  -15, 17,  -37, -33, -2,  33,  -14, 35,  20,  -15, -14, -38, -11, -50, 27,  -39, 20},
                              {-28, -24, 14,  -36, 12,  -21, 34,  43,  -46, -46, 26,  -23, -26, -32, -7,  9,   22,  -20, 50,  -12},
                              {9,   4,   25,  -43, -6,  12,  28,  -22, 22,  18,  -14, 13,  -20, -5,  -12, -3,  31,  -39, 11,  16},
                              {-23, 2,   16,  -36, -32, 7,   17,  -35, -13, 43,  -49, -18, -5,  32,  29,  -35, -6,  38,  -38, -15},
                              {24,  -46, 39,  10,  19,  42,  6,   -4,  3,   37,  43,  29,  11,  35,  33,  36,  -16, 34,  -40, 17},
                              {21,  45,  -41, 21,  -29, -33, -40, -21, 3,   -35, 47,  48,  41,  18,  -32, 34,  -40, 6,   37,  1},
                              {12,  -14, 45,  -43, 38,  -42, -11, 30,  6,   -48, -39, 46,  -2,  -3,  -8,  3,   -9,  17,  -16, 24},
                              {13,  -50, -32, 26,  -30, -12, 17,  26,  43,  26,  30,  -30, 23,  -16, 1,   -21, 41,  -31, 26,  21},
                              {11,  -11, 32,  -1,  -20, 44,  40,  4,   24,  41,  39,  -9,  42,  24,  29,  -4,  -7,  -3,  10,  34},
                              {-1,  -29, -37, 11,  -24, 20,  19,  -12, 13,  3,   -36, -39, -28, -39, -50, 12,  27,  41,  -45, -16},
                              {-11, 5,   38,  -11, 11,  -49, -37, 34,  36,  47,  -14, -50, -47, -22, 14,  -21, -35, -39, 23,  -33},
                              {-15, 25,  -45, -33, 47,  5,   -36, -27, -16, -10, 30,  20,  17,  -46, -9,  -38, 1,   -31, 45,  -18},
                              {49,  8,   41,  -41, -36, -4,  -3,  6,   23,  -43, -8,  21,  -21, 36,  -34, 24,  19,  20,  30,  -6},
                              {30,  14,  36,  10,  30,  18,  41,  50,  47,  7,   -20, 14,  -48, -25, -37, 6,   5,   26,  1,   29},
                              {7,   46,  -26, -35, -43, -43, -7,  23,  -3,  -40, 40,  4,   -1,  6,   3,   -23, -19, -47, -14, 39}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{22,  -48, 4,   -50, 31,  -27, 22,  45,  7,   10,  18,  -43, -12, -1,  27,  5,   28,  -13, 19,  -32},
                              {6,   -25, 36,  -41, 31,  37,  11,  -4,  -33, -25, -5,  43,  -20, 30,  -3,  3,   -42, -1,  -26, 31},
                              {-42, 13,  24,  19,  5,   39,  -47, 11,  -6,  40,  -16, 8,   49,  -6,  31,  1,   -11, -22, -44, -23},
                              {-18, 13,  28,  44,  -39, 25,  -10, -50, 5,   -21, -9,  31,  11,  50,  -10, 5,   11,  45,  -4,  21},
                              {6,   -24, -39, -8,  -44, 47,  26,  -5,  31,  34,  19,  10,  30,  -22, 37,  22,  -27, -38, 5,   0},
                              {37,  36,  -1,  37,  41,  48,  16,  33,  44,  23,  -38, 1,   -33, -33, -19, -36, 12,  44,  15,  -21},
                              {39,  26,  26,  -31, -15, 7,   -22, 14,  -7,  -19, -17, 40,  1,   42,  36,  28,  34,  25,  50,  5},
                              {-48, 46,  29,  -36, -42, 9,   -19, -2,  -47, -49, 4,   25,  -31, -40, 21,  0,   4,   -16, -9,  -19},
                              {-19, -37, 38,  10,  39,  -44, 32,  21,  10,  -14, -31, -47, -20, 5,   -39, 19,  37,  48,  34,  7},
                              {-7,  -33, 48,  8,   -11, 27,  9,   38,  16,  27,  -11, 30,  -30, -47, 10,  -17, -38, -42, 23,  5},
                              {-30, 37,  -13, -50, -32, -2,  49,  21,  -1,  -33, -20, -12, -7,  4,   -4,  -27, 17,  48,  9,   -26},
                              {-47, 16,  38,  -8,  -35, 33,  -39, 22,  2,   -8,  -15, 2,   -10, -33, -44, -22, -19, 9,   46,  -39},
                              {-19, 7,   2,   -40, 28,  -50, 39,  -39, 4,   34,  -30, -24, 36,  -6,  3,   -5,  3,   23,  -31, -8},
                              {33,  -3,  21,  -30, -11, -35, -11, -11, -23, 27,  -29, 29,  -11, -26, -11, 16,  -34, -8,  -6,  -33},
                              {-50, -26, 28,  -14, 28,  2,   44,  15,  -20, -50, -34, -29, 18,  14,  -47, -12, -14, -22, 50,  -8},
                              {-10, -4,  44,  2,   11,  18,  -21, -10, 15,  -34, 50,  -13, 4,   -15, 6,   15,  12,  29,  50,  6},
                              {-16, -17, 35,  -13, -45, -19, 33,  -3,  24,  28,  10,  9,   -42, -30, -12, 13,  -26, 4,   -20, 39},
                              {40,  16,  39,  13,  -17, -49, -31, 23,  18,  21,  -20, 35,  -32, -25, -6,  35,  35,  29,  -40, -42},
                              {0,   28,  -7,  21,  50,  50,  7,   -8,  29,  -33, -41, -44, 25,  -26, 6,   47,  -1,  -10, -45, 44},
                              {-16, 23,  -4,  -37, -23, 31,  32,  12,  -23, 24,  14,  -6,  16,  -21, 15,  -12, -42, 44,  -35, -5}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{31,  -35, -18, 5,   20,  -19, 9,   11,  -42, -13, -22, 33,  -31, -15, 4,   43,  -13, -24, -27, 36},
                              {-16, -24, 0,   -35, -48, 41,  46,  -43, -10, 19,  14,  20,  -34, -13, -7,  -37, -12, 9,   22,  -25},
                              {16,  -50, 48,  1,   -46, -5,  44,  -23, 36,  -1,  -13, -30, -50, 30,  -45, -21, 27,  8,   15,  -11},
                              {-25, 39,  -49, 2,   49,  39,  14,  -39, 26,  -7,  -15, 25,  -34, -40, 22,  -2,  9,   34,  17,  -5},
                              {-32, 0,   35,  -30, -7,  35,  -33, 26,  -44, -8,  -43, 28,  -8,  -50, 8,   -3,  -29, -35, 49,  -26},
                              {33,  -46, 9,   -32, 33,  48,  41,  -20, -22, -47, 30,  45,  -24, -4,  -41, -26, 27,  16,  32,  2},
                              {49,  -49, -21, 41,  33,  -8,  -28, -6,  0,   31,  -8,  -4,  33,  13,  -44, -50, 3,   24,  -24, -33},
                              {-22, -12, 18,  -44, -47, -19, 12,  -25, -9,  26,  27,  29,  22,  -8,  24,  -29, 26,  -13, 20,  -14},
                              {48,  42,  13,  -49, -5,  8,   13,  -36, 30,  8,   12,  -42, 8,   -4,  5,   -24, -50, -8,  34,  -44},
                              {5,   35,  0,   17,  17,  -8,  23,  49,  35,  -9,  -33, 35,  -5,  -18, 38,  -8,  21,  -5,  -26, 35},
                              {33,  43,  28,  1,   -47, -15, 23,  -44, 21,  28,  -49, 34,  -25, -2,  6,   21,  1,   18,  -46, -31},
                              {-33, 45,  -23, -32, -19, 34,  25,  -22, 45,  -39, -32, -16, -22, -9,  28,  43,  43,  40,  -41, 27},
                              {-8,  -30, 39,  23,  1,   5,   -11, -21, -11, -36, 50,  -13, -12, 24,  0,   17,  -44, 10,  35,  7},
                              {-7,  -34, 47,  48,  2,   -32, -23, 23,  11,  6,   -32, -46, 6,   -33, 33,  -20, -42, 36,  8,   -18},
                              {7,   31,  -10, 11,  17,  12,  -5,  -16, 13,  -40, -42, -22, -20, -6,  45,  -6,  -6,  -19, -16, -40},
                              {32,  -47, 40,  -43, -37, -43, 15,  32,  -41, 27,  -5,  -18, 45,  49,  50,  24,  -22, 28,  -16, 49},
                              {17,  25,  40,  -20, -45, 3,   -41, -35, 31,  5,   5,   18,  33,  -43, -22, -30, 25,  28,  -36, 4},
                              {15,  16,  5,   43,  -41, 16,  1,   -28, -28, -37, 14,  10,  32,  10,  18,  -47, 43,  -28, 38,  -34},
                              {-13, 27,  -40, 28,  21,  -44, 9,   -34, -24, -14, 1,   -22, 8,   -37, -17, -8,  30,  17,  50,  22},
                              {-31, -17, -26, -8,  33,  -28, -40, 26,  4,   -20, 26,  -16, 27,  -23, 11,  33,  -43, -42, 39,  -25}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-5,  4,   20,  28,  -40, -12, 2,   -17, 45,  -14, -31, -37, 43,  10,  -44, -24, 42,  -6,  -30, -41},
                              {36,  11,  -39, -35, 15,  -30, 22,  -17, 41,  20,  46,  0,   27,  -31, 14,  -10, 45,  33,  -40, 12},
                              {-13, 25,  4,   -6,  -29, -11, -43, -41, -50, 28,  9,   -29, 24,  7,   -39, -48, 32,  35,  -6,  -17},
                              {-36, 41,  -24, -6,  11,  -34, 29,  -14, 14,  23,  15,  11,  -46, 0,   3,   -5,  23,  40,  31,  -31},
                              {-45, -22, -4,  45,  37,  -24, -31, 40,  12,  -17, -3,  31,  -29, -33, -3,  40,  1,   -14, -32, -48},
                              {-21, -18, 14,  -13, -32, 0,   -1,  -35, 17,  49,  -19, 8,   -40, 49,  15,  6,   22,  35,  -41, -6},
                              {38,  -50, 32,  -23, -1,  -30, -19, -6,  50,  -40, -46, 24,  12,  7,   -29, 15,  -10, 38,  40,  -17},
                              {34,  -3,  -15, 10,  28,  -43, 36,  -18, -5,  -42, -45, -30, 38,  42,  -48, 30,  39,  -23, 19,  -40},
                              {7,   22,  -44, 21,  19,  -26, -17, -24, -16, -21, -47, 6,   3,   -24, -45, 9,   -43, 36,  -50, -5},
                              {22,  -20, -2,  -31, -7,  -31, 45,  -34, -30, 8,   39,  -21, 25,  -2,  -22, 2,   -22, -21, -38, 9},
                              {-21, 3,   40,  7,   17,  50,  24,  20,  28,  -23, -15, 46,  -47, -39, -26, 29,  -45, -24, -36, -48},
                              {-24, -24, -4,  -23, 4,   -5,  4,   -42, 3,   -23, -18, 22,  35,  -6,  29,  11,  -40, -1,  23,  4},
                              {1,   -27, -38, 23,  30,  -4,  -18, -45, -41, 27,  40,  -35, -31, -8,  34,  -15, -41, -12, -18, -37},
                              {21,  -19, -21, 3,   12,  -6,  -31, -22, -9,  -21, 33,  -40, 21,  -4,  8,   39,  -39, -39, 18,  25},
                              {28,  23,  -38, 17,  15,  -50, 49,  7,   -32, 45,  -8,  -29, 11,  16,  50,  18,  -2,  4,   50,  -27},
                              {-41, 11,  45,  6,   7,   -17, -7,  -41, 48,  46,  28,  -38, 1,   -32, 11,  -23, -2,  -15, -40, 46},
                              {-30, 48,  -15, 43,  -50, 48,  -19, -31, 20,  -47, 9,   3,   -10, 42,  0,   31,  -45, -38, -3,  -32},
                              {10,  6,   38,  45,  41,  -11, 14,  -47, -45, -49, -33, 46,  -5,  -18, -30, -20, -32, -42, 16,  0},
                              {-9,  15,  -39, 46,  -6,  -8,  -32, -42, -15, -20, -48, -46, 14,  25,  -19, -8,  25,  -28, -27, -50},
                              {39,  24,  -48, -29, 12,  -26, -17, -35, -34, -30, -42, -34, 8,   43,  3,   -17, 30,  37,  -15, 6}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);

    left = matrix_lib::Matrix{{-11, 12,  -23, -41, -5,  -18, 12,  -12, -37, -15, 3,   -35, -50, 15,  -20, -25, -3,  27,  -9,  39},
                              {25,  26,  -45, -32, -44, 46,  37,  -26, -20, 31,  -1,  -8,  -30, 4,   42,  -10, -35, 47,  30,  25},
                              {40,  2,   -26, 1,   33,  38,  2,   -27, 40,  -47, -31, 19,  -50, -44, 19,  31,  -44, 20,  -6,  41},
                              {-33, 8,   -7,  -48, 32,  -24, 37,  47,  -14, -38, -1,  42,  23,  -44, 7,   -50, 24,  6,   29,  -7},
                              {-15, -48, 25,  43,  27,  41,  19,  -11, 3,   19,  -30, -33, 44,  -16, -17, -17, 37,  11,  27,  14},
                              {12,  9,   -39, 18,  -35, 34,  32,  23,  -20, 49,  -21, -15, 49,  -49, -1,  0,   44,  -46, -14, 47},
                              {49,  31,  -38, -49, 2,   -17, -15, -26, 9,   -5,  43,  -19, 21,  -29, -21, -36, 33,  18,  24,  -28},
                              {30,  44,  40,  36,  7,   -45, -26, 28,  -47, 1,   -19, -37, -31, -36, 25,  -40, -28, 10,  19,  4},
                              {25,  -18, -37, -42, 1,   -49, 40,  13,  9,   -27, -19, 43,  -9,  -28, 43,  28,  -9,  -25, -41, 47},
                              {-23, -17, 17,  -43, -30, -18, 25,  37,  41,  49,  -40, 27,  41,  -18, 44,  -26, 48,  30,  -25, 36},
                              {-40, 36,  -1,  12,  6,   -30, -15, -10, -5,  -9,  -28, 23,  -44, 35,  36,  22,  16,  31,  11,  15},
                              {9,   38,  -43, 21,  23,  10,  -50, -17, -20, 28,  -4,  29,  14,  2,   -27, -6,  25,  -38, 2,   -47},
                              {-8,  -49, -6,  34,  23,  46,  -50, 17,  50,  27,  -39, -46, -18, -18, -38, -30, 36,  -34, -43, 4},
                              {30,  10,  -41, 28,  -8,  -42, -33, 26,  -4,  -29, 35,  49,  -31, 8,   -49, 10,  8,   -39, -34, -14},
                              {44,  -15, 10,  -9,  14,  50,  31,  -22, -42, 33,  -2,  -48, -6,  -34, 35,  36,  50,  -30, -42, 45},
                              {-6,  -17, -21, -28, -39, 24,  -17, 41,  -18, 6,   -16, 17,  40,  -41, -2,  25,  -42, -23, -28, -50},
                              {44,  18,  -31, 30,  -24, -42, 35,  -48, -31, 5,   17,  46,  -30, -38, 29,  -26, -41, -46, -27, -38},
                              {35,  -20, 12,  20,  4,   -24, -6,  32,  -10, 10,  -28, 39,  10,  -20, -47, 37,  -26, 30,  -33, -36},
                              {35,  -37, -31, -2,  -13, -19, 16,  -31, 32,  -35, 33,  24,  -17, -40, -25, -34, -12, -45, -39, 35},
                              {50,  49,  21,  15,  -28, -41, 22,  -18, 26,  -47, -16, 10,  19,  21,  -27, 44,  33,  -50, -29, 33}};
    EXPECT_LT(std::abs(sum(left * matrix_lib::inverse(left) - matrix_lib::Matrix::identity(left.rows()))), precision);
}

TEST(TestInv, invalidShape) {
    matrix_lib::Matrix left;
    left = matrix_lib::Matrix{{-34, 16,  49,  40, 41},
                              {4,   21,  25,  18, 39},
                              {-21, 42,  40,  43, 47},
                              {-28, -31, -14, 17, 4}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::ShapeError);

    left = matrix_lib::Matrix{{2,   21,  8,  42,  -7,  18, 21, 5,   20, 21,  25,  34,  -32, 31, -17, 38, 6,  49,  -24},
                              {-30, -3,  31, -45, 8,   10, 26, -17, 22, -12, -45, -43, -37, 15, -41, 20, 8,  -31, 49},
                              {-31, -40, 11, 48,  -49, -8, 9,  27,  9,  -50, 3,   -12, -19, 8,  46,  43, 32, 24,  41}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::ShapeError);

    left = matrix_lib::Matrix{{-33, 9,  27,  26, 10,  20, 41, -30, 14,  -29, -9,  0,   -10, 50, 14,  -41, 40,  -17, -15},
                              {-33, 22, -27, 21, -19, 46, 27, -15, -17, 45,  -47, -12, -38, 11, -14, 37,  -27, -40, -3}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::ShapeError);

    left = matrix_lib::Matrix{{-28, 4,  -26, -21, 10, -32, 10, 45,  -16, -14, 20,  31, -26, 15},
                              {-21, 11, -6,  -1,  17, 26,  10, -19, -2,  1,   -19, 50, 10,  -22},
                              {34,  39, -40, -21, 16, 14,  44, -3,  -3,  -10, 36,  40, 15,  -46}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::ShapeError);

    left = matrix_lib::Matrix{{-27, 13,  -21, -10},
                              {-16, -27, 1,   -6},
                              {-29, 7,   39,  -50},
                              {4,   6,   15,  48},
                              {36,  13,  -32, 5},
                              {-50, 8,   18,  -26},
                              {-2,  -22, -12, -40},
                              {-47, 36,  42,  -28},
                              {-25, 13,  -42, 43},
                              {-46, -21, -50, 43},
                              {17,  45,  4,   37}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::ShapeError);
}

TEST(TestInv, singularMatrix) {
    matrix_lib::Matrix left;

    left = matrix_lib::Matrix{{13, -43},
                              {13, -43}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::InvalidOperationError) << 1;

    left = matrix_lib::Matrix{{6,  -3,  39},
                              {46, -41, 9},
                              {52, -44, 48}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::InvalidOperationError) << 2;

    left = matrix_lib::Matrix{{24,  -23, -22},
                              {-40, 48,  3},
                              {-16, 25,  -19}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::InvalidOperationError) << 3;

    left = matrix_lib::Matrix{{-10, 30},
                              {-10, 30}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::InvalidOperationError) << 4;

    left = matrix_lib::Matrix{{-10, -5},
                              {-10, -5}};;
    EXPECT_THROW(matrix_lib::inverse(left), matrix_lib::InvalidOperationError) << 5;
}
